buildscript {
  ext {
    javaVersion = '1.8'
    vavrVersion = '0.9.2'
    slf4jVersion = '1.7.25'
    kotlinVersion = '1.2.61'
    jgivenVersion = '0.15.3'
    logbackVersion = '1.2.3'
    lombokVersion = '1.18.2'
    junitJupiterVersion = '5.2.0'
    junitPlatformVersion = '1.2.0'
    jacksonKotlinVersion = '2.9.6'
    springCloudVersion = 'Finchley.SR1'
    springCloudVersion = '2.0.4.RELEASE'
    asciidoctorjPdfVersion = '1.5.0-alpha.15'
    assertjVersion = '3.10.0'
    hamcrestVersion = '1.3'
    junit4Version = '4.12'
  }

  dependencies {
    classpath "org.asciidoctor:asciidoctorj-pdf:$asciidoctorjPdfVersion"
  }
}

plugins {
  id 'idea'
  id 'eclipse'
  id 'com.avast.gradle.docker-compose' version '0.6.18'
  id 'org.asciidoctor.convert' version '1.5.8.1' apply false
  id 'org.ajoberstar.git-publish' version '0.3.0' apply false
  id 'io.franzbecker.gradle-lombok' version '1.14' apply false
  id 'cn.bestwu.propdeps-eclipse' version '0.0.10' apply false
  id 'cn.bestwu.propdeps-maven' version '0.0.10' apply false
  id 'cn.bestwu.propdeps-idea' version '0.0.10' apply false
  id 'cn.bestwu.propdeps' version '0.0.10' apply false
}

/*
wrapper {
  gradleVersion = '4.10'
  distributionType = 'BIN'
}
*/

apply from: "$projectDir/gradle/ide.gradle"
apply from: "$projectDir/gradle/clean.gradle"
apply from: "$projectDir/gradle/repositories.gradle"

allprojects {

  apply plugin: 'base'
  apply plugin: 'maven'

  version = '0.0.1'
  group = 'com.github.daggerok'

  defaultTasks 'clean', 'build'
}

subprojects {

  apply plugin: 'java'
  sourceCompatibility = targetCompatibility = "$javaVersion"

  apply plugin: 'io.franzbecker.gradle-lombok'
  lombok.version = project.lombokVersion

  dependencies {
    // In java we trust...
    compile "io.vavr:vavr:$vavrVersion"

    compile "org.slf4j:slf4j-api:$slf4jVersion"
    compile "ch.qos.logback:logback-classic:$logbackVersion"
  }
}

apply from: "$projectDir/gradle/findbugs.gradle"
apply from: "$projectDir/gradle/docker-compose.gradle"
apply from: "$projectDir/gradle/docs.gradle"

/*
// spring-boot multi-module preamble:
// this in dependencies closure really doesn't work:
// compile project(":submodule").sourceSets.main.output // dot't do this!

// 1. in spring-boot submodules use next configs:

bootJar {
  enabled = false
}
jar {
  enabled = true
}

// 2. in spring-boot target main module to fix gradle compile build + lombok issue use all of these:

dependencies {
  annotationProcessor(project(":submodule"))
  compileOnly(project(":submodule"))
  compile(project(":submodule"))
}
*/
